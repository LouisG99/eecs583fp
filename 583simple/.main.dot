digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55c98605c080 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %i1 = alloca i32, align 4\l  %i2 = alloca i32, align 4\l  %loopCount = alloca i32, align 4\l  %percent_likelihood_same = alloca i32, align 4\l  %c = alloca i8, align 1\l  %a = alloca %struct.Num, align 8\l  %b = alloca %struct.Num, align 8\l  %i1rand = alloca i32, align 4\l  %i2rand = alloca i32, align 4\l  %res_a = alloca double, align 8\l  %res_b = alloca double, align 8\l  store i32 0, i32* %retval, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %call = call i64 @time(i64* null) #3\l  %conv = trunc i64 %call to i32\l  call void @srand(i32 %conv) #3\l  %0 = load i8**, i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 1\l  %1 = load i8*, i8** %arrayidx, align 8\l  %call1 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %1, i8* getelementptr\l... inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32* %i1, i8* %c,\l... i32* %i2, i8* %c, i32* %loopCount, i8* %c, i32* %percent_likelihood_same) #3\l  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %3 = load i32, i32* %i1, align 4\l  %4 = load i32, i32* %i2, align 4\l  %5 = load i32, i32* %loopCount, align 4\l  %6 = load i32, i32* %percent_likelihood_same, align 4\l  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0),\l... i32 %3, i32 %4, i32 %5, i32 %6)\l  %7 = load i32, i32* %i1, align 4\l  %cmp = icmp sge i32 %7, 6\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x55c98605c080:s0 -> Node0x55c98605c6c0;
	Node0x55c98605c080:s1 -> Node0x55c98605c670;
	Node0x55c98605c670 [shape=record,label="{lor.lhs.false:                                    \l  %8 = load i32, i32* %i2, align 4\l  %cmp4 = icmp sge i32 %8, 6\l  br i1 %cmp4, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55c98605c670:s0 -> Node0x55c98605c6c0;
	Node0x55c98605c670:s1 -> Node0x55c98605c710;
	Node0x55c98605c6c0 [shape=record,label="{if.then:                                          \l  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0))\l  store i32 %call6, i32* %retval, align 4\l  br label %return\l}"];
	Node0x55c98605c6c0 -> Node0x55c98605c8a0;
	Node0x55c98605c710 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x55c98605c710 -> Node0x55c98605c760;
	Node0x55c98605c760 [shape=record,label="{while.cond:                                       \l  %10 = load i32, i32* %loopCount, align 4\l  %dec = add nsw i32 %10, -1\l  store i32 %dec, i32* %loopCount, align 4\l  %cmp7 = icmp sgt i32 %10, 0\l  br i1 %cmp7, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x55c98605c760:s0 -> Node0x55c98605c7b0;
	Node0x55c98605c760:s1 -> Node0x55c98605c850;
	Node0x55c98605c7b0 [shape=record,label="{while.body:                                       \l  %11 = load i32, i32* %percent_likelihood_same, align 4\l  %12 = load i32, i32* %i1, align 4\l  %call9 = call i32 @GetRandIdxSometimes(i32 %11, i32 %12)\l  store i32 %call9, i32* %i1rand, align 4\l  %13 = load i32, i32* %i2, align 4\l  store i32 %13, i32* %i2rand, align 4\l  %14 = load i32, i32* %i1rand, align 4\l  %idx.ext = sext i32 %14 to i64\l  %add.ptr = getelementptr inbounds i32, i32* getelementptr inbounds ([6 x\l... i32], [6 x i32]* @arr, i64 0, i64 0), i64 %idx.ext\l  call void @ConstructNum(%struct.Num* %a, i32* %add.ptr)\l  %isInf = getelementptr inbounds %struct.Num, %struct.Num* %a, i32 0, i32 1\l  store i32 0, i32* %isInf, align 8\l  %15 = load i32, i32* %i2rand, align 4\l  %idx.ext10 = sext i32 %15 to i64\l  %add.ptr11 = getelementptr inbounds i32, i32* getelementptr inbounds ([6 x\l... i32], [6 x i32]* @arr, i64 0, i64 0), i64 %idx.ext10\l  call void @ConstructNum(%struct.Num* %b, i32* %add.ptr11)\l  %valPtr = getelementptr inbounds %struct.Num, %struct.Num* %a, i32 0, i32 0\l  %16 = load i32*, i32** %valPtr, align 8\l  %17 = load i32, i32* %16, align 4\l  %call12 = call double @fn_PURE_(i32 %17)\l  store double %call12, double* %res_a, align 8\l  %valPtr13 = getelementptr inbounds %struct.Num, %struct.Num* %b, i32 0, i32 0\l  %18 = load i32*, i32** %valPtr13, align 8\l  %19 = load i32, i32* %18, align 4\l  %20 = icmp ne i32 %19, %17\l  br i1 %20, label %26, label %21\l|{<s0>T|<s1>F}}"];
	Node0x55c98605c7b0:s0 -> Node0x55c98605c8f0;
	Node0x55c98605c7b0:s1 -> Node0x55c98605c800;
	Node0x55c98605c800 [shape=record,label="{%21:\l21:                                               \l  %22 = phi double [ %call12, %while.body ], [ %27, %26 ]\l  store double %22, double* %res_b, align 8\l  %23 = load double, double* %res_a, align 8\l  %24 = load double, double* %res_b, align 8\l  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8],\l... [21 x i8]* @.str.6, i64 0, i64 0), double %23, double %24)\l  br label %while.cond\l}"];
	Node0x55c98605c800 -> Node0x55c98605c760;
	Node0x55c98605c850 [shape=record,label="{while.end:                                        \l  store i32 0, i32* %retval, align 4\l  br label %return\l}"];
	Node0x55c98605c850 -> Node0x55c98605c8a0;
	Node0x55c98605c8a0 [shape=record,label="{return:                                           \l  %25 = load i32, i32* %retval, align 4\l  ret i32 %25\l}"];
	Node0x55c98605c8f0 [shape=record,label="{%26:\l26:                                               \l  %27 = call double @fn_PURE_(i32 %19)\l  br label %21\l}"];
	Node0x55c98605c8f0 -> Node0x55c98605c800;
}
