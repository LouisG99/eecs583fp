digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x558ef39abfd0 [shape=record,label="{entry:\l  %0 = alloca i32\l  %1 = alloca double\l  %2 = alloca i32\l  %3 = alloca double\l  %4 = alloca i32\l  %5 = alloca i32\l  %6 = alloca i32\l  %7 = alloca i32\l  %8 = alloca i32\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %iters = alloca i32, align 4\l  %aliasPeriod = alloca i32, align 4\l  %A = alloca [1000 x double], align 16\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %i = alloca i32, align 4\l  %temp = alloca double, align 8\l  store i32 0, i32* %retval, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %9 = load i32, i32* %argc.addr, align 4\l  %cmp = icmp ne i32 %9, 2\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x558ef39abfd0:s0 -> Node0x558ef39aea50;
	Node0x558ef39abfd0:s1 -> Node0x558ef39aeaa0;
	Node0x558ef39aea50 [shape=record,label="{if.then:                                          \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8],\l... [12 x i8]* @.str.3, i64 0, i64 0))\l  store i32 1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x558ef39aea50 -> Node0x558ef39aedc0;
	Node0x558ef39aeaa0 [shape=record,label="{if.end:                                           \l  %call1 = call i64 @time(i64* null) #3\l  %conv = trunc i64 %call1 to i32\l  call void @srand(i32 %conv) #3\l  %10 = load i8**, i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8*, i8** %10, i64 1\l  %11 = load i8*, i8** %arrayidx, align 8\l  %call2 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %11, i8*\l... getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32*\l... %iters, i32* %aliasPeriod) #3\l  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %13 = load i32, i32* %iters, align 4\l  %14 = load i32, i32* %aliasPeriod, align 4\l  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64\l... 0), i32 %13, i32 %14)\l  %arraydecay = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 0\l  call void @initArr(double* %arraydecay, i32 1000)\l  store i32 5, i32* %j, align 4\l  store i32 6, i32* %k, align 4\l  store i32 0, i32* %i, align 4\l  %15 = load i32, i32* %aliasPeriod\l  store i32 %15, i32* %8\l  %16 = load i32, i32* %aliasPeriod\l  store i32 %16, i32* %7\l  %17 = load i32, i32* %iters\l  store i32 %17, i32* %6\l  %18 = load i32, i32* %i\l  store i32 %18, i32* %5\l  %19 = load i32, i32* %i\l  store i32 %19, i32* %4\l  %20 = load double, double* %temp\l  store double %20, double* %3\l  %21 = load i32, i32* %i\l  store i32 %21, i32* %2\l  %22 = load double, double* %temp\l  store double %22, double* %1\l  %23 = load i32, i32* %i\l  store i32 %23, i32* %0\l  br label %for.cond\l}"];
	Node0x558ef39aeaa0 -> Node0x558ef39aeaf0;
	Node0x558ef39aeaf0 [shape=record,label="{for.cond:                                         \l  %24 = load i32, i32* %2\l  %25 = load i32, i32* %0\l  %26 = load i32, i32* %i, align 4\l  %27 = load i32, i32* %6\l  %28 = load i32, i32* %iters, align 4\l  %cmp4 = icmp slt i32 %26, %28\l  br i1 %cmp4, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x558ef39aeaf0:s0 -> Node0x558ef39aeb40;
	Node0x558ef39aeaf0:s1 -> Node0x558ef39aed70;
	Node0x558ef39aeb40 [shape=record,label="{for.body:                                         \l  %arrayidx6 = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 5\l  %29 = load double, double* %arrayidx6, align 8\l  %mul = fmul double %29, 0x400921FB4D12D84A\l  %add = fadd double %mul, 0x40AED87A52695960\l  %div = fdiv double %add, 2.750000e+01\l  store double %div, double* %temp, align 8\l  %30 = load i32, i32* %5\l  %31 = load i32, i32* %i, align 4\l  %32 = load i32, i32* %7\l  %33 = load i32, i32* %aliasPeriod, align 4\l  %rem = srem i32 %31, %33\l  %cmp7 = icmp eq i32 %rem, 0\l  br i1 %cmp7, label %if.then9, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x558ef39aeb40:s0 -> Node0x558ef39aeb90;
	Node0x558ef39aeb40:s1 -> Node0x558ef39aebe0;
	Node0x558ef39aeb90 [shape=record,label="{if.then9:                                         \l  store i32 5, i32* %k, align 4\l  br label %if.end15\l}"];
	Node0x558ef39aeb90 -> Node0x558ef39aecd0;
	Node0x558ef39aebe0 [shape=record,label="{if.else:                                          \l  %34 = load i32, i32* %i, align 4\l  %35 = load i32, i32* %8\l  %36 = load i32, i32* %aliasPeriod, align 4\l  %rem10 = srem i32 %34, %36\l  %cmp11 = icmp eq i32 %rem10, 1\l  br i1 %cmp11, label %if.then13, label %if.end14\l|{<s0>T|<s1>F}}"];
	Node0x558ef39aebe0:s0 -> Node0x558ef39aec30;
	Node0x558ef39aebe0:s1 -> Node0x558ef39aec80;
	Node0x558ef39aec30 [shape=record,label="{if.then13:                                        \l  store i32 6, i32* %k, align 4\l  br label %if.end14\l}"];
	Node0x558ef39aec30 -> Node0x558ef39aec80;
	Node0x558ef39aec80 [shape=record,label="{if.end14:                                         \l  br label %if.end15\l}"];
	Node0x558ef39aec80 -> Node0x558ef39aecd0;
	Node0x558ef39aecd0 [shape=record,label="{if.end15:                                         \l  %37 = load double, double* %3\l  %38 = load double, double* %1\l  %39 = load double, double* %temp, align 8\l  %40 = load i32, i32* %k, align 4\l  %idxprom = sext i32 %40 to i64\l  %arrayidx16 = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 %idxprom\l  store double %39, double* %arrayidx16, align 8\l  br label %for.inc\l}"];
	Node0x558ef39aecd0 -> Node0x558ef39aed20;
	Node0x558ef39aed20 [shape=record,label="{for.inc:                                          \l  %41 = load i32, i32* %4\l  %42 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %42, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x558ef39aed20 -> Node0x558ef39aeaf0;
	Node0x558ef39aed70 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %retval, align 4\l  br label %return\l}"];
	Node0x558ef39aed70 -> Node0x558ef39aedc0;
	Node0x558ef39aedc0 [shape=record,label="{return:                                           \l  %43 = load i32, i32* %retval, align 4\l  ret i32 %43\l}"];
}
