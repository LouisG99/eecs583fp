digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x564d40187a80 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %0 = bitcast i32* %retval to i8*\l  call void @_inst_log(i64 10, i8* %0)\l  %1 = bitcast %struct._IO_FILE** @stderr to i8*\l  call void @_inst_log(i64 7, i8* %1)\l  %2 = bitcast %struct._IO_FILE** @_inst_log.instLogFile to i8*\l  call void @_inst_log(i64 2, i8* %2)\l  %argc.addr = alloca i32, align 4\l  %3 = bitcast i32* %argc.addr to i8*\l  call void @_inst_log(i64 11, i8* %3)\l  %argv.addr = alloca i8**, align 8\l  %4 = bitcast i8*** %argv.addr to i8*\l  call void @_inst_log(i64 12, i8* %4)\l  %i1 = alloca i32, align 4\l  %5 = bitcast i32* %i1 to i8*\l  call void @_inst_log(i64 14, i8* %5)\l  %i2 = alloca i32, align 4\l  %6 = bitcast i32* %i2 to i8*\l  call void @_inst_log(i64 15, i8* %6)\l  %loopCount = alloca i32, align 4\l  %c = alloca i8, align 1\l  %a = alloca %struct.Num, align 8\l  %b = alloca %struct.Num, align 8\l  %i1_ptr = alloca i32*, align 8\l  %7 = bitcast i32** %i1_ptr to i8*\l  call void @_inst_log(i64 16, i8* %7)\l  %i2_ptr = alloca i32*, align 8\l  %8 = bitcast i32** %i2_ptr to i8*\l  call void @_inst_log(i64 17, i8* %8)\l  %res_a = alloca double, align 8\l  %9 = bitcast double* %res_a to i8*\l  call void @_inst_log(i64 21, i8* %9)\l  %res_b = alloca double, align 8\l  %10 = bitcast double* %res_b to i8*\l  call void @_inst_log(i64 24, i8* %10)\l  store i32 0, i32* %retval, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %11 = load i8**, i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8*, i8** %11, i64 1\l  %12 = bitcast i8** %arrayidx to i8*\l  call void @_inst_log(i64 13, i8* %12)\l  %13 = load i8*, i8** %arrayidx, align 8\l  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %13, i8* getelementptr\l... inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32* %i1, i8* %c,\l... i32* %i2, i8* %c, i32* %loopCount) #3\l  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %15 = load i32, i32* %i1, align 4\l  %16 = load i32, i32* %i2, align 4\l  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64\l... 0), i32 %15, i32 %16)\l  %17 = load i32, i32* %i1, align 4\l  %cmp = icmp sge i32 %17, 6\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x564d40187a80:s0 -> Node0x564d4018a990;
	Node0x564d40187a80:s1 -> Node0x564d4018a940;
	Node0x564d4018a940 [shape=record,label="{lor.lhs.false:                                    \l  %18 = load i32, i32* %i2, align 4\l  %cmp2 = icmp sge i32 %18, 6\l  br i1 %cmp2, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x564d4018a940:s0 -> Node0x564d4018a990;
	Node0x564d4018a940:s1 -> Node0x564d4018a9e0;
	Node0x564d4018a990 [shape=record,label="{if.then:                                          \l  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))\l  store i32 %call3, i32* %retval, align 4\l  br label %return\l}"];
	Node0x564d4018a990 -> Node0x564d4018aa30;
	Node0x564d4018a9e0 [shape=record,label="{if.end:                                           \l  %20 = load i32, i32* %i1, align 4\l  %idxprom = sext i32 %20 to i64\l  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @arr, i64 0, i64\l... %idxprom\l  store i32* %arrayidx4, i32** %i1_ptr, align 8\l  %21 = load i32, i32* %i2, align 4\l  %idxprom5 = sext i32 %21 to i64\l  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* @arr, i64 0, i64\l... %idxprom5\l  store i32* %arrayidx6, i32** %i2_ptr, align 8\l  %22 = load i32*, i32** %i1_ptr, align 8\l  call void @ConstructNum(%struct.Num* %a, i32* %22)\l  %isInf = getelementptr inbounds %struct.Num, %struct.Num* %a, i32 0, i32 1\l  %23 = bitcast i32* %isInf to i8*\l  call void @_inst_log(i64 18, i8* %23)\l  store i32 0, i32* %isInf, align 8\l  %24 = load i32*, i32** %i2_ptr, align 8\l  call void @ConstructNum(%struct.Num* %b, i32* %24)\l  %valPtr = getelementptr inbounds %struct.Num, %struct.Num* %a, i32 0, i32 0\l  %25 = bitcast i32** %valPtr to i8*\l  call void @_inst_log(i64 19, i8* %25)\l  %26 = load i32*, i32** %valPtr, align 8\l  %27 = bitcast i32* %26 to i8*\l  call void @_inst_log(i64 20, i8* %27)\l  %28 = load i32, i32* %26, align 4\l  %call7 = call double @fn_PURE_(i32 %28)\l  store double %call7, double* %res_a, align 8\l  %valPtr8 = getelementptr inbounds %struct.Num, %struct.Num* %b, i32 0, i32 0\l  %29 = bitcast i32** %valPtr8 to i8*\l  call void @_inst_log(i64 22, i8* %29)\l  %30 = load i32*, i32** %valPtr8, align 8\l  %31 = bitcast i32* %30 to i8*\l  call void @_inst_log(i64 23, i8* %31)\l  %32 = load i32, i32* %30, align 4\l  %call9 = call double @fn_PURE_(i32 %32)\l  store double %call9, double* %res_b, align 8\l  store i32 0, i32* %retval, align 4\l  br label %return\l}"];
	Node0x564d4018a9e0 -> Node0x564d4018aa30;
	Node0x564d4018aa30 [shape=record,label="{return:                                           \l  %33 = load i32, i32* %retval, align 4\l  ret i32 %33\l}"];
}
