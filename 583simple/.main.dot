digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x556059a547f0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %iters = alloca i32, align 4\l  %aliasPeriod = alloca i32, align 4\l  %A = alloca [1000 x double], align 16\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %A_val_ptr = alloca double*, align 8\l  %i = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %0 = load i32, i32* %argc.addr, align 4\l  %cmp = icmp ne i32 %0, 2\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x556059a547f0:s0 -> Node0x556059a55520;
	Node0x556059a547f0:s1 -> Node0x556059a55570;
	Node0x556059a55520 [shape=record,label="{if.then:                                          \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8],\l... [12 x i8]* @.str.3, i64 0, i64 0))\l  store i32 1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x556059a55520 -> Node0x556059a55890;
	Node0x556059a55570 [shape=record,label="{if.end:                                           \l  %call1 = call i64 @time(i64* null) #3\l  %conv = trunc i64 %call1 to i32\l  call void @srand(i32 %conv) #3\l  %1 = load i8**, i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 1\l  %2 = load i8*, i8** %arrayidx, align 8\l  %call2 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %2, i8* getelementptr\l... inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i32* %iters, i32*\l... %aliasPeriod, i32* @iterFnPure) #3\l  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %4 = load i32, i32* %iters, align 4\l  %5 = load i32, i32* %aliasPeriod, align 4\l  %6 = load i32, i32* @iterFnPure, align 4\l  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0),\l... i32 %4, i32 %5, i32 %6)\l  %arraydecay = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 0\l  call void @initArr(double* %arraydecay, i32 1000)\l  store i32 5, i32* %j, align 4\l  store i32 6, i32* %k, align 4\l  %arraydecay4 = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 0\l  %add.ptr = getelementptr inbounds double, double* %arraydecay4, i64 5\l  store double* %add.ptr, double** %A_val_ptr, align 8\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x556059a55570 -> Node0x556059a555c0;
	Node0x556059a555c0 [shape=record,label="{for.cond:                                         \l  %7 = load i32, i32* %i, align 4\l  %8 = load i32, i32* %iters, align 4\l  %cmp5 = icmp slt i32 %7, %8\l  br i1 %cmp5, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x556059a555c0:s0 -> Node0x556059a55610;
	Node0x556059a555c0:s1 -> Node0x556059a55840;
	Node0x556059a55610 [shape=record,label="{for.body:                                         \l  %9 = load i32, i32* %i, align 4\l  %10 = load i32, i32* %aliasPeriod, align 4\l  %rem = srem i32 %9, %10\l  %cmp7 = icmp eq i32 %rem, 0\l  br i1 %cmp7, label %if.then9, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x556059a55610:s0 -> Node0x556059a55660;
	Node0x556059a55610:s1 -> Node0x556059a556b0;
	Node0x556059a55660 [shape=record,label="{if.then9:                                         \l  store i32 5, i32* %k, align 4\l  br label %if.end15\l}"];
	Node0x556059a55660 -> Node0x556059a557a0;
	Node0x556059a556b0 [shape=record,label="{if.else:                                          \l  %11 = load i32, i32* %i, align 4\l  %12 = load i32, i32* %aliasPeriod, align 4\l  %rem10 = srem i32 %11, %12\l  %cmp11 = icmp eq i32 %rem10, 1\l  br i1 %cmp11, label %if.then13, label %if.end14\l|{<s0>T|<s1>F}}"];
	Node0x556059a556b0:s0 -> Node0x556059a55700;
	Node0x556059a556b0:s1 -> Node0x556059a55750;
	Node0x556059a55700 [shape=record,label="{if.then13:                                        \l  store i32 6, i32* %k, align 4\l  br label %if.end14\l}"];
	Node0x556059a55700 -> Node0x556059a55750;
	Node0x556059a55750 [shape=record,label="{if.end14:                                         \l  br label %if.end15\l}"];
	Node0x556059a55750 -> Node0x556059a557a0;
	Node0x556059a557a0 [shape=record,label="{if.end15:                                         \l  %13 = load double*, double** %A_val_ptr, align 8\l  %14 = load double, double* %13, align 8\l  %call16 = call double @fn_PURE_(double %14)\l  %15 = load i32, i32* %k, align 4\l  %idxprom = sext i32 %15 to i64\l  %arrayidx17 = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 %idxprom\l  store double 2.000000e+00, double* %arrayidx17, align 8\l  br label %for.inc\l}"];
	Node0x556059a557a0 -> Node0x556059a557f0;
	Node0x556059a557f0 [shape=record,label="{for.inc:                                          \l  %16 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %16, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x556059a557f0 -> Node0x556059a555c0;
	Node0x556059a55840 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %retval, align 4\l  br label %return\l}"];
	Node0x556059a55840 -> Node0x556059a55890;
	Node0x556059a55890 [shape=record,label="{return:                                           \l  %17 = load i32, i32* %retval, align 4\l  ret i32 %17\l}"];
}
