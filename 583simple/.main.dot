digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55e047e42970 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %A = alloca [1000 x double], align 16\l  %i = alloca i32, align 4\l  %iters = alloca i32, align 4\l  %aliasPeriod = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %temp = alloca double, align 8\l  store i32 0, i32* %retval, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %0 = load i32, i32* %argc.addr, align 4\l  %cmp = icmp ne i32 %0, 2\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x55e047e42970:s0 -> Node0x55e047e43aa0;
	Node0x55e047e42970:s1 -> Node0x55e047e43af0;
	Node0x55e047e43aa0 [shape=record,label="{if.then:                                          \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8],\l... [12 x i8]* @.str.3, i64 0, i64 0))\l  store i32 1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x55e047e43aa0 -> Node0x55e047e43f50;
	Node0x55e047e43af0 [shape=record,label="{if.end:                                           \l  store i32 0, i32* %i, align 4\l  %1 = load i32, i32* %i, align 4\l  %2 = load i32, i32* %i, align 4\l  %3 = load i32, i32* %i, align 4\l  %4 = load i32, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x55e047e43af0 -> Node0x55e047e43b40;
	Node0x55e047e43b40 [shape=record,label="{for.cond:                                         \l  %cmp1 = icmp slt i32 %2, 1000\l  br i1 %cmp1, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55e047e43b40:s0 -> Node0x55e047e43b90;
	Node0x55e047e43b40:s1 -> Node0x55e047e43c30;
	Node0x55e047e43b90 [shape=record,label="{for.body:                                         \l  %conv = sitofp i32 %3 to double\l  %mul = fmul double %conv, 2.239800e+00\l  %idxprom = sext i32 %4 to i64\l  %arrayidx = getelementptr inbounds [1000 x double], [1000 x double]* %A, i64\l... 0, i64 %idxprom\l  store double %mul, double* %arrayidx, align 8\l  br label %for.inc\l}"];
	Node0x55e047e43b90 -> Node0x55e047e43be0;
	Node0x55e047e43be0 [shape=record,label="{for.inc:                                          \l  %inc = add nsw i32 %1, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x55e047e43be0 -> Node0x55e047e43b40;
	Node0x55e047e43c30 [shape=record,label="{for.end:                                          \l  %call2 = call i64 @time(i64* null) #3\l  %conv3 = trunc i64 %call2 to i32\l  call void @srand(i32 %conv3) #3\l  %5 = load i8**, i8*** %argv.addr, align 8\l  %arrayidx4 = getelementptr inbounds i8*, i8** %5, i64 1\l  %6 = load i8*, i8** %arrayidx4, align 8\l  %call5 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %6, i8* getelementptr\l... inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32* %iters, i32*\l... %aliasPeriod) #3\l  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8\l  %8 = load i32, i32* %iters, align 4\l  %9 = load i32, i32* %aliasPeriod, align 4\l  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0),\l... i32 %8, i32 %9)\l  store i32 5, i32* %j, align 4\l  store i32 6, i32* %k, align 4\l  store i32 0, i32* %i, align 4\l  %10 = load i32, i32* %aliasPeriod, align 4\l  %11 = load i32, i32* %iters, align 4\l  %12 = load i32, i32* %aliasPeriod, align 4\l  %13 = load i32, i32* %k, align 4\l  br label %for.cond7\l}"];
	Node0x55e047e43c30 -> Node0x55e047e43c80;
	Node0x55e047e43c80 [shape=record,label="{for.cond7:                                        \l  %14 = load i32, i32* %i, align 4\l  %cmp8 = icmp slt i32 %14, %11\l  br i1 %cmp8, label %for.body10, label %for.end26\l|{<s0>T|<s1>F}}"];
	Node0x55e047e43c80:s0 -> Node0x55e047e43cd0;
	Node0x55e047e43c80:s1 -> Node0x55e047e43f00;
	Node0x55e047e43cd0 [shape=record,label="{for.body10:                                       \l  %arrayidx11 = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 5\l  %15 = load double, double* %arrayidx11, align 8\l  %mul12 = fmul double %15, 0x400921FB4D12D84A\l  %add = fadd double %mul12, 0x40AED87A52695960\l  %div = fdiv double %add, 2.750000e+01\l  store double %div, double* %temp, align 8\l  %16 = load i32, i32* %i, align 4\l  %rem = srem i32 %16, %10\l  %cmp13 = icmp eq i32 %rem, 0\l  br i1 %cmp13, label %if.then15, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55e047e43cd0:s0 -> Node0x55e047e43d20;
	Node0x55e047e43cd0:s1 -> Node0x55e047e43d70;
	Node0x55e047e43d20 [shape=record,label="{if.then15:                                        \l  store i32 5, i32* %k, align 4\l  br label %if.end21\l}"];
	Node0x55e047e43d20 -> Node0x55e047e43e60;
	Node0x55e047e43d70 [shape=record,label="{if.else:                                          \l  %17 = load i32, i32* %i, align 4\l  %rem16 = srem i32 %17, %12\l  %cmp17 = icmp eq i32 %rem16, 1\l  br i1 %cmp17, label %if.then19, label %if.end20\l|{<s0>T|<s1>F}}"];
	Node0x55e047e43d70:s0 -> Node0x55e047e43dc0;
	Node0x55e047e43d70:s1 -> Node0x55e047e43e10;
	Node0x55e047e43dc0 [shape=record,label="{if.then19:                                        \l  store i32 6, i32* %k, align 4\l  br label %if.end20\l}"];
	Node0x55e047e43dc0 -> Node0x55e047e43e10;
	Node0x55e047e43e10 [shape=record,label="{if.end20:                                         \l  br label %if.end21\l}"];
	Node0x55e047e43e10 -> Node0x55e047e43e60;
	Node0x55e047e43e60 [shape=record,label="{if.end21:                                         \l  %18 = load double, double* %temp, align 8\l  %idxprom22 = sext i32 %13 to i64\l  %arrayidx23 = getelementptr inbounds [1000 x double], [1000 x double]* %A,\l... i64 0, i64 %idxprom22\l  store double %18, double* %arrayidx23, align 8\l  br label %for.inc24\l}"];
	Node0x55e047e43e60 -> Node0x55e047e43eb0;
	Node0x55e047e43eb0 [shape=record,label="{for.inc24:                                        \l  %19 = load i32, i32* %i, align 4\l  %inc25 = add nsw i32 %19, 1\l  store i32 %inc25, i32* %i, align 4\l  br label %for.cond7\l}"];
	Node0x55e047e43eb0 -> Node0x55e047e43c80;
	Node0x55e047e43f00 [shape=record,label="{for.end26:                                        \l  store i32 0, i32* %retval, align 4\l  br label %return\l}"];
	Node0x55e047e43f00 -> Node0x55e047e43f50;
	Node0x55e047e43f50 [shape=record,label="{return:                                           \l  %20 = load i32, i32* %retval, align 4\l  ret i32 %20\l}"];
}
